{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","setTitle","_useState5","_useState6","loading","setLoading","_useState7","_useState8","setMovie","normalizeMovieData","data","Title","Plot","Poster","imdbID","concat","handleSubmit","useCallback","e","query","preventDefault","fetch","then","res","json","catch","Response","Error","finally","_Fragment","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","disabled","trim","length","some","savedMovie","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"uTAQaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,eAAA,OAAKC,UAAU,OAAO,UAAQ,YAAWC,SAAA,CACvCC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,gBAAeC,SAC/BC,cAAA,OACE,UAAQ,cACRC,IAAKL,EAAMM,OACXC,IAAI,kBAIVN,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,iBAAgBC,SAChCC,cAAA,OACEC,IAAI,wBACJE,IAAI,aAIVH,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,aAAa,UAAQ,aAAYC,SAAEH,EAAMQ,aAI1DP,eAAA,OAAKC,UAAU,UAAU,UAAQ,mBAAkBC,SAAA,CAChDH,EAAMS,YACPL,cAAA,SACAA,cAAA,KAAGM,KAAMV,EAAMW,QAAS,UAAQ,WAAUR,SAAC,iBAK3C,EChCKS,EAA8B,SAAHb,GAAA,IAAMc,EAAMd,EAANc,OAAM,OAClDT,cAAA,OAAKF,UAAU,SAAQC,SACpBU,EAAOC,KAAI,SAAAd,GAAK,OACfI,cAACN,EAAS,CAERE,MAAOA,GADFA,EAAMe,OAEX,KAEA,E,+BCLD,IAAMC,EAA6B,SAAHjB,GAA+B,IAAzBc,EAAMd,EAANc,OAAQI,EAASlB,EAATkB,UACnDC,EAA0BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAlCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,EAA0BL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA/BhB,EAAKiB,EAAA,GAAEC,EAAQD,EAAA,GACtBE,EAA8BR,oBAAS,GAAMS,EAAAP,YAAAM,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAA0BZ,mBAAuB,MAAKa,EAAAX,YAAAU,EAAA,GAA/C/B,EAAKgC,EAAA,GAAEC,EAAQD,EAAA,GAShBE,EAAqB,SAACC,GAC1B,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,KACAC,EAEEH,EAFFG,OACAC,EACEJ,EADFI,OAIF,MAAO,CACL/B,MAAO4B,EACP3B,YAAa4B,EACb/B,OAAmB,QAAXgC,EACJ,4DACAA,EACJ3B,QAAQ,GAAD6B,OARc,6BAQK,KAAAA,OAAID,GAC9BxB,OAAQwB,EAEZ,EAEME,EAAeC,uBAAY,SAACC,GCzC7B,IAAkBC,ED0CrBD,EAAEE,iBAEFf,GAAW,IC5CUc,ED6CZpC,EC5CJsC,MAAM,GAADN,OAHE,2CAGS,OAAAA,OAAMI,IAC1BG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,mBACR,KDwCEL,MAAK,SAACZ,GACL,GAAI,UAAWA,EACb,MAAM,IAAIiB,MAGZ,OAAOjB,CACT,IACCY,KAAKb,GACLa,KAAKd,GACLiB,OAAM,kBAAM3B,GAAS,EAAK,IAC1B8B,SAAQ,kBAAMvB,GAAW,EAAM,GACpC,GAAG,CAACtB,IAcJ,OACEP,eAAAqD,WAAA,CAAAnD,SAAA,CACEF,eAAA,QAAMC,UAAU,aAAYC,SAAA,CAC1BF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,SAAOF,UAAU,QAAQqD,QAAQ,cAAapD,SAAC,gBAI/CC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,SACE,UAAQ,aACRoD,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZxD,UAAWyD,IAAW,QAAS,CAAE,YAAarC,IAC9CsC,MAAOpD,EACPqD,SAzEmB,SAAClB,GAC9B,IAAQiB,EAAUjB,EAAEmB,OAAZF,MAERrC,GAAS,GACTG,EAASkC,EACX,MAyEUtC,GACElB,cAAA,KAAGF,UAAU,iBAAiB,UAAQ,eAAcC,SAAC,4CAO3DF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE,UAAQ,eACRoD,KAAK,SACLtD,UAAWyD,IAAW,kBAAmB,CACvC,aAAc9B,IAEhBkC,QAAStB,EACTuB,SAAUxD,EAAMyD,OAAOC,QAAU,EAAE/D,SACpC,mBAMS,OAAVH,GACEI,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE,UAAQ,YACRoD,KAAK,SACLtD,UAAU,oBACV6D,QA/DO,WAElBlD,EAAOsD,MAAK,SAACC,GAAU,OAAKA,EAAWrD,UAAgB,OAALf,QAAK,IAALA,OAAK,EAALA,EAAOe,OAAM,KACnD,OAAVf,GAEHiB,EAAU,GAADuB,OAAA6B,YAAKxD,GAAM,CAAEb,KAGxB0B,EAAS,IACTO,EAAS,KACX,EAqDwC9B,SACzB,4BAUC,OAAVH,GACEC,eAAA,OAAKC,UAAU,YAAY,UAAQ,mBAAkBC,SAAA,CACnDC,cAAA,MAAIF,UAAU,QAAOC,SAAC,YACtBC,cAACN,EAAS,CAACE,MAAOA,SAM9B,EE7IasE,EAAM,WACjB,IAAApD,EAA4BC,mBAAkB,IAAGC,EAAAC,YAAAH,EAAA,GAA1CL,EAAMO,EAAA,GAAEH,EAASG,EAAA,GAExB,OACEnB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBC,cAAA,OAAKF,UAAU,eAAcC,SAC3BC,cAACQ,EAAU,CAACC,OAAQA,MAGtBT,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAACY,EAAS,CAACC,UAAWA,EAAWJ,OAAQA,QAIjD,EChBA0D,IAASC,OAAOpE,cAACkE,EAAG,IAAKG,SAASC,eAAe,Q","file":"static/js/main.eedb246b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useCallback, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[]\n  setMovies: (c: Movie[]) => void\n}\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [error, setError] = useState(false);\n  const [title, setTitle] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState<null | Movie>(null);\n\n  const handleInputTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    setError(false);\n    setTitle(value);\n  };\n\n  const normalizeMovieData = (data: MovieData): Movie => {\n    const {\n      Title,\n      Plot,\n      Poster,\n      imdbID,\n    } = data;\n    const BASE_MOVIE_URL = 'https://www.imdb.com/title';\n\n    return {\n      title: Title,\n      description: Plot,\n      imgUrl: Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : Poster,\n      imdbUrl: `${BASE_MOVIE_URL}/${imdbID}`,\n      imdbId: imdbID,\n    };\n  };\n\n  const handleSubmit = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    setLoading(true);\n    getMovie(title)\n      .then((data) => {\n        if ('Error' in data) {\n          throw new Error();\n        }\n\n        return data;\n      })\n      .then(normalizeMovieData)\n      .then(setMovie)\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  }, [title]);\n\n  const handleAddMovie = () => {\n    if (\n      !movies.some((savedMovie) => savedMovie.imdbId === movie?.imdbId)\n      && movie !== null\n    ) {\n      setMovies([...movies, movie]);\n    }\n\n    setTitle('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={title}\n              onChange={handleInputTitleChange}\n            />\n          </div>\n\n          {\n            error && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': loading,\n              })}\n              onClick={handleSubmit}\n              disabled={title.trim().length <= 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {\n            movie !== null && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={handleAddMovie}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )\n          }\n        </div>\n      </form>\n\n      {\n        movie !== null && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )\n      }\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=8d150d85';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}